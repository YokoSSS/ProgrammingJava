オブジェクト指向プログラミング(OOP)のテスト15件

001. How coupled should your classes be and why?How coupled should your classes be and why?

 You should limit coupling to reduce dependencies between classes.You should limit coupling to reduce dependencies between classes.

 You should limit coupling so that class members relate to the class objective.You should limit coupling so that class members relate to the class objective.

 You should increase coupling to improve dependencies between classes.You should increase coupling to improve dependencies between classes.

 You should increase coupling so that class members relate to the class purpose.




002. What is the most accurate example of the Liskov substitution principle?What is the most accurate example of the Liskov substitution principle?

public class Car{ } public class FlyingCars extends Car{ public void fly(){} } public class Tesla FlyingCar{} public class Honda Car{}

public class Car{ public void fly(){} } public class Tesla extends Car{} public class Honda extends Car{}

public class Car{ public void fly(){} } public class Tesla Car{} public class Honda Car{}

public class Car{ } public class FlyingCar extends Car{ public void fly(){} } public class Tesla extends FlyingCar{} public class Honda extends Car{}


003. Which statements best describe the Gang of Four design patterns called Memento and Observer? Which statements best describe the Gang of Four design patterns called Memento and Observer? 

 Memento captures and restores an object's internal state. Observer notifies multiple classes of changes.Memento captures and restores an object's internal state. Observer notifies multiple classes of changes.

 Memento defers the exact steps of an algorithm to a subclass. Observer defines a new operation to a class without change.Memento defers the exact steps of an algorithm to a subclass. Observer defines a new operation to a class without change.

 Memento notifies multiple classes of changes. Observer captures and restores an object's internal state. Memento notifies multiple classes of changes. Observer captures and restores an object's internal state. 

 Memento alters an object's behavior when its state changes. Observer encapsulates an algorithm inside a class.

 
004. Which two blocks are used to handle and check errors?Which two blocks are used to handle and check errors?

 do and checkdo and check

 try and catchtry and catch

 do and whiledo and while

 catching and trying
 

005. Methods and attributes that define an object are a kind of blueprint called what?Methods and attributes that define an object are a kind of blueprint called what?

 a collectiona collection

 a class a class 

 a procedurea procedure

 a variable

006. What best describes what object-oriented programming does?What best describes what object-oriented programming does?

It creates one class for all business logic.

It programs exclusively to interfaces.

It programs exclusively to classes.

It focuses on objects that interact cleanly with one another.
 
 
007. Which type of constructor cannot have a return type?Which type of constructor cannot have a return type?

 default

 parameterized

 copy

 Constructors do not have a return type.
 
 
008. What is multilevel inheritance?　What is multilevel inheritance?

 not doubling single-level inheritance

 a class that does not have more than one parent

 classes derived from other derived classes

 a class not derived from another derived object
 

009. What is polymorphism?What is polymorphism?

the ability for an object to be processed in more than one form

the ability for an undefined object to be processed in at least one way

the ability for an object to be processed in only one form

the ability for several objects to be processed in one way
 
 
 
010. In general, which choice is not a benefit of OOP?

 code reusability
 
 duplicate or redundant data

 efficient code

 modularity
 
 
011. What is the best reason to use a design pattern?

 It will result in code that is more extensible and maintainable.

 It will speed initial development.

 It will allow you to add that design pattern to your resume.

 It will result in a more compact product.
 
 
 
012. One advantage of using methods is making efficient reuse of the code. What is another major advantage?

 You will not need to nest methods within other methods.

 A frequently used process can be modified by changing code in just one place.

 Efficient code reuse prevents hacking.

 Efficient code reuse prevents compilation errors.
 
 
013. What is single-level inheritance?

 when a class does not inherit a base class

 when a class inherits a base class

 when a class inherits a nested class

 when a class gets inherited by two or more classes individually
 
 
014. Assume single inheritance is used with classes A and B while A is the base class. Then assume classes C, D, and E, where C is a base class and D is derived from C, then E is derived from D. Class C is made to inherit from class B. Which type of inheritance is reflected? 


multiple

hybrid

single level

multilevel



015. What is the purpose of a default constructor?
 to initialize attribute values

 to test all behaviors associated with a class

 to link attributes to shared storage

 to reserve memory
 
 
 
